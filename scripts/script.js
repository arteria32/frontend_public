// Основы JavaScript

//2.1 Привет мир!

// Вызвать alert:
alert("Я JavaScript!");

//2.4 Переменные

// Задача
// Работа с переменными

// Объявите две переменные: admin и name.
// Запишите строку "Джон" в переменную name.
// Скопируйте значение из переменной name в admin.
// Выведите на экран значение admin, используя функцию alert (должна показать «Джон»).

// Ответ:
let admin, name1;
name1 = "Джон";
admin = name1;
alert(admin);

// Задача
// Придумайте правильные имена

// Создайте переменную для названия нашей планеты. Как бы вы её назвали?
// Создайте переменную для хранения имени текущего посетителя сайта. Как бы вы назвали такую переменную?

// Ответ:
let ourPlanet = "Земля";
let currentUser = "Артемий";

// Задача
// Какие буквы (заглавные или строчные) использовать для имён констант?
const birthday = "18.04.1982";
const age = someCode(birthday);
// Можно ли использовать заглавные буквы для имени birthday? А для age? Или одновременно для обеих переменных?

// Ответ:
// В переменной birthday можно использовать, в age нельзя

// 2.5 Типы данных

// Задача
// Шаблонные строки
// Что выведет этот скрипт?

let name2 = "Ilya";
alert(`hello ${1}`); // hello 1
alert(`hello ${"name2"}`); // hello name2
alert(`hello ${name2}`); // ? hello Ilya

// 2.6 Взаимодействие: alert, prompt, confirm

// Задача
// Простая страница
// Создайте страницу, которая спрашивает имя у пользователя и выводит его.

// Ответ:
let name3 = prompt("Введите ваше имя:", "");
alert(name3);

// 2.8 Базовые операторы, математика

// Задача
// Постфиксная и префиксная формы
// Чему будут равны переменные a, b, c и d в примере ниже?

let a = 1,
  b = 1;

let c = ++a; // 2
let d = b++; // 1

// Задача
// Преобразование типов
// Какой результат будет у выражений ниже?

"" + 1 + 0; // "10"
"" - 1 + 0; // -1
true + false; // 1
6 / "3"; // 2
"2" * "3"; // 6
4 + 5 + "px"; // "9px"
"$" + 4 + 5; // "$45"
"4" - 2; // 2
"4px" - 2; // NaN
"  -9  " + 5; // "  -9  5"
"  -9  " - 5; // -14
null + 1; // 1
undefined + 1; // NaN
" \t \n" - 2; // -2

// Задача
// Исправьте сложение
// Ниже приведён код, который запрашивает у пользователя два числа и показывает их сумму.
// Он работает неправильно. Код в примере выводит 12 (для значения полей по умолчанию).
// В чём ошибка? Исправьте её. Результат должен быть 3.
let aa = prompt("Первое число?", 1);
let bb = prompt("Второе число?", 2);
alert(aa + bb); // 12

// Ответ:
// Нужно привести строки к числам
alert(+aa + +bb);

// 2.9 Операторы сравнения

// Задача
// Операторы сравнения
// Каким будет результат этих выражений?

5 > 4; // true
"ананас" > "яблоко"; // false
"2" > "12"; // true
undefined == null; // true
undefined === null; // false
null == "\n0\n"; // false
null === +"\n0\n"; // false

// 2.10 Условное ветвление: if, '?'

// Задача
// if (строка с нулём)
// Выведется ли alert?

if ("0") {
  alert("Привет");
}

// Ответ:
// Да, выведется, любая строка кроме пустой – true

// Задача
// Название JavaScript
// Используя конструкцию if..else, напишите код, который будет спрашивать: „Какое «официальное» название JavaScript?“
// Если пользователь вводит «ECMAScript», то показать: «Верно!», в противном случае – отобразить: «Не знаете? ECMAScript!»

// Ответ:
let val1 = prompt('Какое "официальное" название JavaScript?', "");
if (val1 == "ECMAScript") {
  alert("Верно!");
} else {
  alert("Не знаете? ECMAScript!");
}

// Задача
// Покажите знак числа
// Используя конструкцию if..else, напишите код, который получает число через prompt, а затем выводит в alert:
// 1, если значение больше нуля,
// -1, если значение меньше нуля,
// 0, если значение равно нулю.
// Предполагается, что пользователь вводит только числа.

// Ответ:
let val2 = prompt("Введите число", 0);
if (val2 > 0) {
  alert(1);
} else if (val2 < 0) {
  alert(-1);
} else {
  alert(0);
}

// Задача
// Перепишите 'if' в '?'
// Перепишите конструкцию if с использованием условного оператора '?'
let result;
if (a + b < 4) {
  result = "Мало";
} else {
  result = "Много";
}

// Ответ:
result = a + b < 4 ? "Мало" : "Много";

// Задача
// Перепишите 'if..else' в '?'
// Перепишите if..else с использованием нескольких операторов '?'.
// Для читаемости рекомендуется разбить код на несколько строк.

let messagee;
if (login == "Сотрудник") {
  messagee = "Привет";
} else if (login == "Директор") {
  messagee = "Здравствуйте";
} else if (login == "") {
  messagee = "Нет логина";
} else {
  messagee = "";
}

// Ответ:
let message =
  login == "Сотрудник"
    ? "Привет"
    : login == "Директор"
    ? "Здравствуйте"
    : login == ""
    ? "Нет логина"
    : "";

// 2.10 Логические операторы

// Задача
// Что выведет alert (ИЛИ)?
alert(null || 2 || undefined);

// Ответ: 2, это первое значение true

// Задача
// Что выведет alert (ИЛИ)?
alert(alert(1) || 2 || alert(3));

// Ответ: 1, потом 2

// Задача
// Что выведет alert (И)?
alert(1 && null && 2);

// Ответ: null, потому что это первое «ложное» значение из списка

// Задача
// Что выведет alert (И)?
alert(alert(1) && alert(2));

// Ответ: 1, потом undefined.

// Задача
// Что выведет этот код?
alert(null || (2 && 3) || 4);

// Ответ: 3

// Задача
// Проверка значения из диапазона
// Напишите условие if для проверки, что переменная age находится в диапазоне между 14 и 90 включительно.
// «Включительно» означает, что значение переменной age может быть равно 14 или 90.

// Ответ:
if (age >= 14 && age <= 90)
  if (!(age >= 14 && age <= 90))
    if (age < 14 || age > 90)
      if (-1 || 0)
        // Задача
        // Проверка значения вне диапазона
        // Напишите условие if для проверки, что значение переменной age НЕ находится в диапазоне 14 и 90 включительно.
        // Напишите два варианта: первый с использованием оператора НЕ !, второй – без этого оператора.

        // Ответ:
        // 1
        // 2
        // Задача
        // Вопрос о "if"
        // Какие из перечисленных ниже alert выполнятся?
        // Какие конкретно значения будут результатами выражений в условиях if(...)?
        alert("first");
if (-1 && 0) alert("second");
if (null || (-1 && 1)) alert("third");

// Ответ:
// 1 выполнится, -1 || 0 = -1, в логическом контексте true
// 2 не выполнится, -1 && 0 = 0,  в логическом контексте false
// 3 выполнится, && имеет больший приоритет, чем ||

// Задача
// Проверка логина
// Напишите код, который будет спрашивать логин с помощью prompt.
// Если посетитель вводит «Админ», то prompt запрашивает пароль, если ничего не введено или нажата клавиша Esc – показать «Отменено», в противном случае отобразить «Я вас не знаю».
// Пароль проверять так:
// Если введён пароль «Я главный», то выводить «Здравствуйте!»,
// Иначе – «Неверный пароль»,
// При отмене – «Отменено».

let username = prompt("Кто там?", "");

if (username === "Админ") {
  let pass = prompt("Пароль?", "");

  if (pass === "Я главный") {
    alert("Здравствуйте!");
  } else if (pass === "" || pass === null) {
    alert("Отменено");
  } else {
    alert("Неверный пароль");
  }
} else if (username === "" || username === null) {
  alert("Отменено");
} else {
  alert("Я вас не знаю");
}

// 2.13 Циклы while и for

// Задача
// Последнее значение цикла
// Какое последнее значение выведет этот код? Почему?
let i = 3;
while (i) {
  alert(i--);
}

// Ответ: 1

// Задача
// Какие значения выведет цикл while?
// Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
// Оба цикла выводят alert с одинаковыми значениями или нет?
let i = 0;
while (++i < 5) alert(i);

let i = 0;
while (i++ < 5) alert(i);

// Ответ:
// 1 - от 1 до 4
// 2 - от 1 до 5

// Задача
// Какие значения выведет цикл for?
// Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
// Оба цикла выведут alert с одинаковыми значениями или нет?
for (let i = 0; i < 5; i++) alert(i);

for (let i = 0; i < 5; ++i) alert(i);

// Ответ:
// и там и там от 0 до 4

// Выведите чётные числа
// При помощи цикла for выведите чётные числа от 2 до 10.

// Ответ:
for (let i = 2; i <= 10; i++) {
  if (i % 2 == 0) {
    alert(i);
  }
}

// Задача
// Замените for на while
// Перепишите код, заменив цикл for на while, без изменения поведения цикла.
for (let i = 0; i < 3; i++) {
  alert(`number ${i}!`);
}

// Ответ:
let i = 0;
while (i < 3) {
  alert(`number ${i}!`);
  i++;
}

// Задача
// Повторять цикл, пока ввод неверен
// Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
// Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).
// Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.

let number;

do {
  number = prompt("Введите число большее 100", 0);
} while (num <= 100 && num);

// Задача
// Вывести простые числа
// Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
// Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.
// Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.
// Напишите код, который выводит все простые числа из интервала от 2 до n.
// Для n = 10 результат должен быть 2,3,5,7.
// P.S. Код также должен легко модифицироваться для любых других интервалов.

// Ответ:
const n = 10;
for (let i = 1; i <= n; i++) {
  for (let j = 2; j <= i; j++) {
    if (i % j === 0 && j < i) {
      break;
    } else if (j === i) {
      alert(i);
    }
  }
}

// 2.14 Конструкция "switch"

// Задача
// Напишите "if", аналогичный "switch"
// Напишите if..else, соответствующий следующему switch:
switch (browser) {
  case "Edge":
    alert("You've got the Edge!");
    break;

  case "Chrome":
  case "Firefox":
  case "Safari":
  case "Opera":
    alert("Okay we support these browsers too");
    break;

  default:
    alert("We hope that this page looks ok!");
}

// Ответ:
if (browser == "Edge") {
  alert("You've got the Edge!");
} else if (
  browser == "Chrome" ||
  browser == "Firefox" ||
  browser == "Safari" ||
  browser == "Opera"
) {
  alert("Okay we support these browsers too");
} else {
  alert("We hope that this page looks ok!");
}

// Задача
// Переписать условия "if" на "switch"
// Перепишите код с использованием одной конструкции switch:
const number = +prompt("Введите число между 0 и 3", "");

if (number === 0) {
  alert("Вы ввели число 0");
}

if (number === 1) {
  alert("Вы ввели число 1");
}

if (number === 2 || number === 3) {
  alert("Вы ввели число 2, а может и 3");
}

// Ответ:
const number = +prompt("Введите число между 0 и 3", "");

switch (number) {
  case 0:
    alert("Вы ввели число 0");
    break;

  case 1:
    alert("Вы ввели число 1");
    break;

  case 2:
  case 3:
    alert("Вы ввели число 2, а может и 3");
    break;
}

// 2.15 Функции

// Задача
// Обязателен ли "else"?
// Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она запрашивает подтверждение через confirm и возвращает его результат:
function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    // ...
    return confirm("Родители разрешили?");
  }
}
// Будет ли эта функция работать как-то иначе, если убрать else?
function checkAge(age) {
  if (age > 18) {
    return true;
  }
  // ...
  return confirm("Родители разрешили?");
}
// Есть ли хоть одно отличие в поведении этого варианта?

// Ответ:
// Отличий нет, всё одинаково

// Задача
// Перепишите функцию, используя оператор '?' или '||'
// Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она задаёт вопрос confirm и возвращает его результат.
function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    return confirm("Родители разрешили?");
  }
}
// Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
// Сделайте два варианта функции checkAge:
// Используя оператор ?
// Используя оператор ||

// Ответ:
// ?
function checkAge(age) {
  return age > 18 ? true : confirm("Родители разрешили?");
}
// ||
function checkAge(age) {
  return age > 18 || confirm("Родители разрешили?");
}

// Задача
// Функция min(a, b)
// Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
// Пример вызовов:
min(2, 5) == 2;
min(3, -1) == -1;
min(1, 1) == 1;

// Ответ:
function min(a, b) {
  return a < b ? a : b;
}

// Задача
// Функция pow(x,n)
// Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.
pow(3, 2) = 3 * 3 = 9
pow(3, 3) = 3 * 3 * 3 = 27
pow(1, 100) = 1 * 1 * ...* 1 = 1

// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
// P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е. целые от 1 и выше.

// Ответ:
function pow(x, n) {
    let result = x;
    for (let i = 1; i < n; i++) {
      result *= x;
    }
    return result;
  }

let x = prompt("x?", '');
let n = prompt("n?", '');

if (n < 1) {
    alert(`Степень ${n} не поддерживается`);
  } else {
    alert( pow(x, n) );
  }

// 2.17 Стрелочные функции, основы

// Задача
// Перепишите с использованием функции-стрелки
// Замените код Function Expression стрелочной функцией:
function ask(question, yes, no) {
    if (confirm(question)) yes()
    else no();
  }
  
  ask(
    "Вы согласны?",
    function() { alert("Вы согласились."); },
    function() { alert("Вы отменили выполнение."); }
  );

// Ответ:
ask(
    "Вы согласны?",
    () => alert("Вы согласились."),
    () => alert("Вы отменили выполнение.")
  );
